---
title: 《python3.x从零开始学》第一篇
date: 2020-03-07 14:11:57
categories:
  - python
  - 电子书
  - 《python3.x从零开始学》
tags:
  - python
  - 电子书
  - 《python3.x从零开始学》
---

《python3.x从零开始学》第一篇
<!--more-->

## python2.x 和 python3.x 区别

1. 使用__future__模块
python3.x映入了一些与python2.x不兼容的关键字和特性。在python2.x中，可以通过内置的__future__模块导入这些新内容。如果你希望在python2.x环境下写的代码也可以在python3.x中允许，那么建议使用__future__模块

2. print函数
python2.x中的print语句呗python3.x中的print()函数取代，这意味着在python3.x中必须用括号将需要输出的对象括起来

3. xrange
python3.x中range()的实现方式与xrange()函数相同，所以不存在专用的xrange()

4. 触发异常
python2.x支持新旧两种异常触发语法，而python3.x只支持带括号的语法

5. 处理异常
python3.x的异常处理发生了一点变化，在python3.x中必须使用as关键字，python2中不需要

6. next()函数和.next()方法
在python3.x中只能使用next()函数

7. for循环变量与全局命名空间泄露
在python3.x中，for循环中的变量不再会泄露到全局命名空间中了

8. 使用input()解析输入内容
在python2.x中为了避免读取非字符串类型会发生一些危险行为，不得不使用raw_input()代替input()。python3.x改进了input()函数，这样该函数总是将用户的输入存储为str对象

9. 返回可迭代对象，而不是列表
某些函数方法在python2.x中返回列表，python3.x中返回可迭代对象，不过可以使用python3.x的list()函数转为列表


## 类型转换函数
```
int(x) 将x转换为一个整数
float(x) 将x转换为一个浮点数
complex(x) 将x转换为一个复数，实数部分为x，虚数部分为0
complex(x, y) 将x和y转换为一个整数，实数部分为x，虚数部分为y
```

## 常量
在python中，通常用全部大写的变量名表示常量
```
PI 圆周率
E 自然常数
```

## 运算符
#### 算术运算符
```
+	加
-	减
*	乘
/	除
%	取模
**	幂
//	取整数
```

#### 比较运算符
```
==	等于
!=	不等于
>	大于
<	小于
>=	大于等于
<=	小于等于
```

#### 赋值运算符
```
=	简单赋值运算符
+=	等效于 c = c + a
-=	等效于 c = c - a
*=	等效于 c = c * a
/=	等效于 c = c / a
%=	等效于 c = c % a
**=	等效于 c = c ** a
//=	等效于 c = c // a
```

#### 位运算符
```
&	按位与
|	按位或
^	按位异或
~	按位取反
<<	左移运算符
>>	右移运算符
```

#### 逻辑运算符
```
and	与
or	或
not	非
```

#### 成员运算符
```
in	如果在指定的序列中找到值，就返回True，否则返回False
not in	如果在指定的序列中没有找到值，就返回True，否则返回False
```

#### 身份运算符
```
is	判断两个标识符是否引用自一个对象
is not	判断两个标识符是否引用自不同对象
```

#### 运算符优先级
```
**							指数（最高优先级）
~ + -						按位翻转、一元加号和减号
* / % //					乘、除、取模和取整数
+ -							加法、剑法
>> <<						右移左移运算符
&							位AND
^|							位运算符
<= <> >=					比较运算符
<> == !=					等于运算符
= %= /= //= -= += *= **=	赋值运算符
is is not					身份运算符
in not in					成员运算符
not or and					逻辑运算符
```

#### 列表方法

append()	在末尾添加对象
count()		统计出现次数
extend()	在列表末尾追加另一个序列
index()		查找某个值匹配的索引位置
pop()		移除列表中的一个元素（默认最后一个）
remove()	移除列表中某个值的第一个匹配项
reverse()	反响列表中的元素
sort()		对列表元素进行排序，如果指定参数就用参数指定的方法进行排序
clear()		清空列表
copy()		复制列表，类似于a[:]

## 元组

元组与列表类似，不同之处在于元组的元素不能修改

创建元组：
> 1, 2, 3
> 'hello', 'world'
> (1, 2, 3)
> ('hello', 'world')

空元组：
> ()

包含一个值的空元组：
> (1,)

#### 删除元祖

> field = ('hello', 'world')
> del field

#### 元祖内置函数

len()	用于计算元组元素个数
max()	返回元组中元素的最大值
min()	返回元组中元素的最小值
tuple()	用于将列表转换为元组

#### 列表与元组的区别

元组的元素不能修改，元组一旦初始化就不能修改。
如果可能，能用元组代替旧尽量用元组
